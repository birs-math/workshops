services:
  db:
    image: postgres:12.1-alpine
    platform: linux/arm64
    container_name: wsdb
    volumes:
      - ./db/pg-init:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PSQL_TRUST_LOCALNET=true
      - DB_NAME=workshops_production,workshops_development,workshops_test
      - DB_USER=wsuser
      - DB_PASS=wspass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  web:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/arm64
    container_name: workshops
    ports:
      - '8000:8000'
    volumes:
      - .:/home/app/workshops
      - rubygems:/usr/local/rvm/gems
      - node_modules:/home/app/workshops/node_modules
    depends_on:
      - db
    environment: &environment
      - DB_USER=wsuser
      - DB_PASS=wspass
      - DB_HOST=db
      - RAILS_ENV=development
      - YARN_ENV=development
      - RAILS_SERVE_STATIC_FILES=true
      - SECRET_KEY_BASE=development_secret_key_base
      - DEVISE_SECRET_KEY=development_devise_secret_key
      - DEVISE_JWT_SECRET_KEY=development_devise_jwt_secret_key
      - DEVISE_PEPPER=development_devise_pepper
      - DEVISE_EMAIL=webmaster@example.com
      - LECTURES_API_KEY=development_api_key
      - EVENTS_API_KEY=development_api_key
      - APPLICATION_HOST=localhost:8000
      - APPLICATION_PROTOCOL=http
      - EMAIL_SERVER=mailhog
      - EMAIL_PORT=1025
      - EMAIL_STARTTLS=false
      - MAILHOG_HOST=mailhog
    restart: unless-stopped
  que:
    build: 
      context: .
      dockerfile: Dockerfile.fix
    platform: linux/arm64
    container_name: workshops-que
    command: /sbin/entrypoint-que.sh
    volumes:
      - .:/home/app/workshops
      - rubygems:/usr/local/rvm/gems
      - node_modules:/home/app/workshops/node_modules
    environment: *environment
    depends_on:
      - db
      - web
    restart: unless-stopped
  mailhog:
    image: mailhog/mailhog:latest
    platform: linux/amd64
    container_name: workshops-mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    restart: unless-stopped
volumes:
  pgdata:
    labels:
      workshops_volume: "pgdata"
  rubygems:
    labels:
      workshops_volume: "rubygems"
  node_modules:
    labels:
      workshops_volume: "node_modules"